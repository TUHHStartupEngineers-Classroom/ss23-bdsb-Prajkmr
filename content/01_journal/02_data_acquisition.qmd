---
title: "Data Acquisition"
author: "Prajwal Kumar,Koretagere Vijay Kumar"
---
# Challenge: 
## Get some data via an API.
There exists an api provider <https://anyapi.io/> for several features,
In my case, This API returns the latest currency conversion from one base currency to another. Here the base currency is EUR, To/converting currency is INR. Option to enter the amount/unit (in base currency) is given too.

Change the API request params (base, to & amount) in the api request to check for other popular currencies, for example: Try for USD to EUR.

*Code below*

```
library(jsonlite)
token <- "hafkonmbi2gq2jta8s6jo8551pppnma5gamas1kh6r84pubbep7um8"
curr <- GET(glue("https://anyapi.io/api/vl/exchange/convert?base=EUR&to=INR&amount=10&apiKey={token}"))
curr_list<- fromJSON(rawToChar(curr$content))
curr_list
```


![Results for challenge 1](../../assets/img/data acquisition_1.png){fig-align="center"}

* Observation
    + We can notice that the Base currency is "EUR", the conversion currency is "INR" & the amount is "10"Euros.
* Output
    + The API returns the converted value (903.31 INR) and also the rate of conversion (1 EUR= 90.331 INR in the above case).

# Challenge: 
## Scrape one of the competitor websites of canyon

```{r}

library(RSQLite)
library(tidyverse)
library(httr)
library(glue)
library(jsonlite)
library(rvest)
library(stringi)
library(xopen)
library(dplyr)
base_url <- 'https://www.rosebikes.com/bikes'
# 1. Function to get bike family URLs.
get_bike_family_urls <- function(base_url) {
  
  bike_family_urls <- read_html(base_url) %>%
    html_nodes(css = ".catalog-categories-item > a") %>%
    html_attr('href') %>%
    
    # Convert vector to tibble
    
    enframe(name = "position", value = "subdirectory") %>%
    # Add the domain because we will get only the subdirectories
    mutate(
      url = glue('https://www.rosebikes.com{subdirectory}')
    ) 
  
  bike_family_urls <- bike_family_urls %>% 
    filter(!grepl('sale', url)) %>%
    filter(!grepl('kids', url))
  bike_family_urls <- bike_family_urls['url']
  
}
# 2. Function to get bike family URLs.
get_model_urls <- function(url) {
  
  bike_type_url <- read_html(url) %>%
    html_nodes(css = ".catalog-category-bikes__content > a") %>%
    html_attr('href') %>%
    enframe(name = "position", value = "url") %>%
    mutate(url = glue('https://www.rosebikes.com{url}')) 
}
# 3. Function to get the names of each bike 
get_bike_names <- function(url) {
  
  bike_model_name_tbl <- read_html(url) %>%
    html_nodes(css = ".catalog-category-model__title") %>%
    html_text() %>%
    # Convert vector to tibble
    as_tibble()
  
  
}
# 4. Function to get the prices of each bike 
get_bike_prices <- function(url) {
  
  bike_model_price_tbl <- read_html(url) %>%
    html_nodes(css = ".product-tile-price__current-value") %>%
    html_text() %>%
    # Convert vector to tibble
    as_tibble()
  
}
#### APPLYING ABOVE FUNCTIONS
bike_family_url_tbl <- get_bike_family_urls(base_url)
bike_family_url_tbl <- bike_family_url_tbl %>%
  slice(1:3) # Pick 3 categories
# Create a table with bike model URLS
bike_model_url_tbl <- tibble()
for (i in seq_along(bike_family_url_tbl$url)) {
  
  web <- toString(bike_family_url_tbl$url[i])
  bike_model_url_tbl <- bind_rows(bike_model_url_tbl, get_model_urls(web))
  
}
# Create a table with bike model names
bike_model_names_tbl <- tibble()
for (i in seq_along(bike_model_url_tbl$url)) {
  
  web <- toString(bike_model_url_tbl$url[i])
  bike_model_names_tbl <- bind_rows(bike_model_names_tbl, get_bike_names(web))
  
}
# Rename cols
names(bike_model_names_tbl)[1] <- "Bike Model"
# Create a table with bike prices
bike_model_prices_tbl <- tibble()
for (i in seq_along(bike_model_url_tbl$url)) {
  web <- toString(bike_model_url_tbl$url[i])
  bike_model_prices_tbl <- bind_rows(bike_model_prices_tbl, get_bike_prices(web))
}
# Rename cols
names(bike_model_prices_tbl)[1] <- "Bike Prices"
# Join into one table
table_of_prices <- bind_cols(bike_model_names_tbl,bike_model_prices_tbl)
knitr::kable(table_of_prices[1:10, ], caption = 'Rosebike.com bicycle prices')
```

